Fachliche Anforderungen
 
Es soll eine Zeitverwaltung entwickelt werden. Die Anwender sind Mitarbeiter einer Firma, die ihre Zeiten und Aufwände gegen Projekte buchen können. Es gibt die folgenden Entitäten:
Project: Jedes Project hat eine eine eindeutige Kennung und eine Beschreibung
Booking: Ist eine Zeitbuchung. Es gehört einem User, hat eine Anfangs- und eine Endzeit und bezieht sich auf ein Project. Bookings eines Benutzers dürfen sich nicht zeitlich überschneiden.
User: Benutzer können sich am System anmelden und mit dem System agieren. Es gibt verschiedene Rollen. Ein Benutzer kann gehört zu einer der Rollen:
·          
User: Normaler Benutzer, kann seine eigenen Bookings sehen, hinzufügen, ändern und löschen. Ein User kann zu beliebig vielen Projects hinzufüget werden
Manager: Kann User zu Projects zuordnen und alle Bookings sehen
Administrator: Darf alles
Innerhalb der Applikation gibt es die folgenden Sichten:
Users: Liste der Benutzer
Projects: Liste der Projekte
Bookings: Liste der Buchungen für ein Projekt
Wenn sich Sichten ändern, sollen die Benutzer das sofort im Frontend sehen, ohne, dass die einen Reload machen müssen.
 
NFR
 
Es gibt einen klare Trennung zwischen Frontend und Backend
Das Backend legt seine Daten in einer Datenbank ab. Die Standarddatenbank ist MySQL oder Postgres, allerdings darf auf Cassandra, MongoDB, CouchDB oder Neo4j verwendet werden.
Die Backend enthält die Geschäftslogik und steht als Serviceschicht zur Verfügung.
·          
Die Serviceschicht ist secure, d.h. kein Zugriff ohne Authentifizierung
Die Architektur muss es erlauben, dass neben einer internen Benutzerverwaltung auch ein externer Services (z.B. LDAP) integriert wird. Letztere muss nicht implementiert werden, aber architektonisch beschrieben werden
Die Serviceschicht muss per REST (over HTTPS) extern zugreifbar sein, damit die Integration in andere Unternehmenssysteme vereinfacht wird.
Die Standardtechnologie ist Java EE 7, allerdings können auch andere Technologien verwendet werden
Das Backend muss über automatische Tests mit einer vollständigen Abdeckung verfügen
Es muss ein Frontend implementiert werden.
·          
Das Frontend kommuniziert über die Serviceschicht mit dem Backend
Das Frontend kommuniziert mit dem Backend über eine verschlüsselte Verbindung
Der gesamte Build soll auf einem CI-System laufen können
Die Datenbankzugriffe sollen per Prepared Statement erfolgen, damit die Datenbank nicht unnötig belastet wird
Alle fachlichen Aktionen muss geloggt werden
Die Zugriffszeiten auf alle fachlichen Methoden müssen in einem Monitoring-Lösung integriert werden können
 
Aufgaben
 
Erstellung einer Architektur-Dokumentation, die es erlaubt die Applikation von anderen Entwicklern weiterzuentwickeln. Diese Dokumentation muss die folgenden Fragen klären:
·          
Welche Technologien werden verwendet?
Welche Skills sind für die Weiterentwicklung notwendig?
Wie ist die Architektur des Gesamtsystems?
Wie befinden sich die Sourcen des Systems?
Wie sind die Sourcen organisiert?
Welche Software brauche ich, um entwickeln zu können?
Welche Release Units gibt es?
Wie erfolgt ein Release?
Welche Artefakte existieren, welches Format haben sie und wo sind sie zu finden?
Wie funktioniert die Security?
Wie funktioniert der Build?
Wie funktioniert das Deployment?
Standards für Names und Namespaces (z.B. Packages, Klassen, Exceptions, Interfaces, Services, Artefakte)
Standards für Code Style
Standards für Tests und automatisierte Tests
Implementierung der Lösung anhand der o.g. Dokumentation, dabei muss geliefert werden:
·          
Ein versionierter Stand
Die Quelltexte
Die lauffähigen Artefakte
DDL für die Datenbankstruktur (falls notwendig) und DML für die Stammdaten (falls notwendig)
Die Ergebnisse (Dokumentation und Quelltexte) müssen in einem Sourcecode-Repository zur Verfügung gestellt werden.
Vorstellung der Architektur-Dokumentation und der Implementierung in einem Zeitfenster von 45 Minuten




danke für die Fragen
 
1.       Mit welcher Datenmenge ist schätzungsweise zu rechnen?
a.       Anzahl der Anwender

Die Applikation soll erst im eigenen Unternehmen eingesetzt werden (250 Mitarbeiter), falls das Produkt im eigenen Unternehmen erfolgreich ist, soll es später auch an andere Unternehmen verkauft werden. Einige interessierte Kunden haben über 100.000 Mitarbeiter


b.      Anzahl der Projekte bzw. das Inkrement an neuen Projekten pro Monat/Jahr?

Das ist natürlich abhängig von der Grösse der Firma. Es können aber durchaus 1000 Projekte sein und pro Jahr 100 neue dazukommen


c.       Größenordnung für die Anzahl der Buchungen

Effekt macht jeder Mitarbeiter zwei bis drei Buchungen pro Arbeitstag.


2.       Wie viele Anwender werden schätzungsweise gleichzeitig mit der Anwendung arbeiten?

Jeder Mitarbeiter der Firma, aber starke Häufungen gegen Ende des Tages, Ende der Woche und insbesondere Ende des Monats.


3.       Gibt es Anforderungen an die Reaktionszeit einer Benutzerinteraktion, z.B. für das Speichern einer Buchung oder bis die Daten einer Sicht geladen sind?

90% der Benutzeranfragen sollen innerhalb von 1s beantwortet werden, 100% innerhalb von 3s. Falls die eigentliche Antwort länger als 3s braucht, muss eine Anzeige erscheinen, die anzeigt, dass es noch dauert und wie lange es noch schätzungsweise dauert


4.       Gibt es Anforderungen an die Verfügbarkeit / Ausfallsicherheit der Anwendung?

99,5% Prozent Verfügbarkeit pro Monat


5.       Gibt es eine fiktive bestehende IT-Systemlandschaft, die es zu berücksichtigen gilt?
a.       Integration bzw. Interaktion mit anderen Systemen (CI, LDAP, Monitoring-Lösung und mögliche Anbindung an ein ESB wurden schon erwähnt)

Eine Anbindung an andere Authentifizierungssysteme muss einfach (und pro Installation) möglich sein. Die Integration in die restliche Systemlandschaft sollte später per REST erfolgen. Ein ESB würde per REST die Werte z.B. abholen.


6.       Gibt es eine fiktive Skill-Matrix der späteren Entwickler und des Betriebspersonals?

In der Praxis würde man sowas natürlich fragen und eine konkrete Antwort erhalten. Hier würde ich bewusst sagen, dass der Kunde da sehr offen ist, da er wenig IT-Kompetenz hat und bereit ist welche aufzubauen, das aber von der Architektur und der Technologie der Lösung macht.


7.       Hast du für die Architektur-Vorstellung genaue Vorgaben oder lässt du dich überraschen was wir draus machen?
a.       Inhaltlich, sprachlich, zeitlich..

Wir gehen das Thema mal am Freitag durch. Aber stellt euch mal die folgende Situation vor. Ihr seid als Architekt beauftragt, die Architektur vorzuschlagen und habt eine Audienz wo diverse Leute sind, und sicherlich auch Entscheider. Ihr habt ein Zeitfenster von ca. 30 Minuten. Welche Möglichkeiten der Präsentation würdet ihr machen? Welche Inhalte würdet ihr zeigen?

Habe ich alle Fragen beantwortet?
